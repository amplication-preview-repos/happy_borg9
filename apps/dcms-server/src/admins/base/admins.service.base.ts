/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Admins as PrismaAdmins } from "@prisma/client";

export class AdminsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AdminsCountArgs, "select">): Promise<number> {
    return this.prisma.admins.count(args);
  }

  async adminsItems(args: Prisma.AdminsFindManyArgs): Promise<PrismaAdmins[]> {
    return this.prisma.admins.findMany(args);
  }
  async admins(
    args: Prisma.AdminsFindUniqueArgs
  ): Promise<PrismaAdmins | null> {
    return this.prisma.admins.findUnique(args);
  }
  async createAdmins(args: Prisma.AdminsCreateArgs): Promise<PrismaAdmins> {
    return this.prisma.admins.create(args);
  }
  async updateAdmins(args: Prisma.AdminsUpdateArgs): Promise<PrismaAdmins> {
    return this.prisma.admins.update(args);
  }
  async deleteAdmins(args: Prisma.AdminsDeleteArgs): Promise<PrismaAdmins> {
    return this.prisma.admins.delete(args);
  }
}
